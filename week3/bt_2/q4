/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    // bool isBalanced(TreeNode* root) {
    //     if(root==NULL)
    //     return true;
    //    int lh=isBalanced(root->left);
    //    int rh=isBalanced(root->right);
    //    if(lh==-1&&rh==-1)
    //    return false;
    //    if(abs(lh-rh)>1) return false;
    //    //return true;
    //    return max(lh,rh)+1;
     bool b=true;
   
 int hight(TreeNode*root){
         if(root==NULL) return 0;
        int n1=hight(root->left) , n2=hight(root->right);
         if(abs(n1-n2)>1) b=false;
         return max(n1,n2)+1;           
    }
bool isBalanced(TreeNode* root) {
     if(root==NULL) return true;  
     hight(root);
     return b;

        
    }
};
