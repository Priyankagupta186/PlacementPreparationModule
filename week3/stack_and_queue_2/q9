#include <bits/stdc++.h>
vector<int> lse(vector<int>& a ,int n){
    stack<int>st;
    vector<int> ans;
    for(int i = 0 ; i < n ; i++){
        while(!st.empty() && a[st.top()] >= a[i] ) st.pop();
        if(st.empty())ans[i] = -1;
        else ans[i] = st.top();
        st.push(i);
    }
    return ans;

} 

vector<int> rse(vector<int>& a ,int n){
    stack<int>st;
    vector<int> ans(n);
    for(int i = n - 1 ; i >-1 ; i--){
        while(!st.empty() && a[st.top()] >= a[i] ) st.pop();
        if(st.empty())ans[i] = n;
        else ans[i] = st.top();
        st.push(i);
    }
    return ans;

}
vector<int> maxMinWindow(vector<int> a, int n) {
    // Write your code here.
    vector<int>LSE = lse(a,n);
    
    vector<int>RSE = rse(a,n);
    
    vector<int> temp(n);
    
    for(int i = 0 ; i < n ;i++){
        
        temp[i] = RSE[i] - LSE[i] - 1;
        
    }
    vector<int> ans(n,-1);
    for(int i = 0 ; i < n ;i++){
        ans[temp[i]-1] = max(ans[temp[i]-1], a[i]);
    }
    for(int i = n - 2 ; i >= 0 ; i--){
        ans[i] = max(ans[i],ans[i+1]);
    }
    return ans;

    
    
}
