class Solution {
public:
   void bfs(int ic,vector<vector<int>>& ans,vector<vector<int>>& image,int sr,int sc,int color)
   {
       ans[sr][sc]=color;
       queue<pair<int,int>>q;
       q.push({sr,sc});
       int delrow[] = {-1,0,+1,0};
        int delcol[] = {0,+1,0,-1};
       while(!q.empty())
       {
             int row = q.front().first;
            int col = q.front().second;
            q.pop();
            for(int i=0;i<4;i++)
            {
                int nrow = row+delrow[i];
                int ncol = col+delcol[i];
                   if(nrow>=0 && nrow<image.size() && ncol>=0 && ncol<image[0].                    size() && image[nrow][ncol]==ic && ans[nrow][ncol]!=color)
                   {
                       ans[nrow][ncol]=color;
                       q.push({nrow,ncol});
                   }
            }     
       }
   }
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int ic=image[sr][sc];
        vector<vector<int>>ans=image;
        bfs(ic,ans,image,sr,sc,color);
        return ans;
    }
};
